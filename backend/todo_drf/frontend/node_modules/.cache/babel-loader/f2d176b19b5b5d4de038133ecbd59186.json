{"ast":null,"code":"var _jsxFileName = \"/home/piter/Pulpit/tododjreactIvy/frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false\n      },\n      editing: false\n    };\n\n    this.fetchTask = () => {\n      axios.get(\"http://127.0.0.1:8000/api/task-list\").then(res => {\n        this.setState({\n          todoList: res.data\n        });\n      });\n    };\n  }\n\n  // żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n  // inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\n  componentWillMount() {\n    this.fetchTask();\n    console.log(this.state.todoList);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"task-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Add task\",\n      className: \"form-control\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit\",\n      type: \"submit\",\n      name: \"add\",\n      className: \"btn btn-warning\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/piter/Pulpit/tododjreactIvy/frontend/src/App.js"],"names":["React","axios","App","Component","state","todoList","activeItem","id","title","completed","editing","fetchTask","get","then","res","setState","data","componentWillMount","console","log","render","flex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAE,IADM;AAEVC,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,SAAS,EAAE;AAHD,OAFN;AAONC,MAAAA,OAAO,EAAE;AAPH,KADwB;;AAAA,SAYhCC,SAZgC,GAYpB,MAAM;AAChBV,MAAAA,KAAK,CAACW,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAuDC,GAAD,IAAS;AAC7D,aAAKC,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAES,GAAG,CAACE;AADF,SAAd;AAGD,OAJD;AAKD,KAlB+B;AAAA;;AAoBhC;AACA;AACAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKN,SAAL;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,QAAvB;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,eAUE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,SAAS,EAAC,iBAJZ;AAKE,MAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF,CADF,CADF,eAyBE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CADF,CADF;AA+BD;;AA3D+B;;AA8DlC,eAAenB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    activeItem: {\n      id: null,\n      title: \"\",\n      completed: false,\n    },\n    editing: false,\n  };\n\n  // Tak ma wyglądać funkcja, żeby nie trzeba było bindować\n  fetchTask = () => {\n    axios.get(\"http://127.0.0.1:8000/api/task-list\").then((res) => {\n      this.setState({\n        todoList: res.data,\n      });\n    });\n  };\n\n  // żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n  // inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\n  componentWillMount() {\n    this.fetchTask();\n    console.log(this.state.todoList);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  {/* The flex-grow property specifies how much \n                the item will grow relative to the rest of the flexible items inside the same container. */}\n                  <input\n                    placeholder=\"Add task\"\n                    className=\"form-control\"\n                    id=\"title\"\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    id=\"submit\"\n                    type=\"submit\"\n                    name=\"add\"\n                    className=\"btn btn-warning\"\n                    value=\"Submit\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}