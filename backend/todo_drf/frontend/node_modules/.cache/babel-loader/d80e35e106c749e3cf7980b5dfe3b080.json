{"ast":null,"code":"var _jsxFileName = \"/home/piter/Pulpit/tododjreactIvy/frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false\n      },\n      editing: false\n    };\n\n    this.fetchTask = () => {\n      axios.get(\"http://127.0.0.1:8000/api/task-list\").then(res => {\n        console.log(res.data);\n        this.setState({\n          todoList: res.data\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      // let name = e.target.name; // da nam wartość name z inputu\n      let value = e.target.value; // console.log(\"Name\", name);\n      // console.log(\"Value\", value);\n\n      this.setState({\n        activeItem: { ...this.state.activeItem,\n          title: value\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"Item: \", this.state.activeItem);\n      let url = \"http://127.0.0.1:8000/api/task-create/\"; // axios.post(url, { headers: { \"Content-Type\": \"application/json\" } });\n\n      if (this.state.editing) {\n        url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n        this.setState({\n          editing: false\n        });\n      }\n\n      axios.post(url, this.state.activeItem) //postuje słownika activeItem do backendu\n      .then(res => {\n        console.log(res);\n        this.fetchTask(); //pobiera listę\n\n        this.setState({\n          // resetuje stan activeItem\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false\n          }\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.startEdit = task => {\n      this.setState({\n        activeItem: task,\n        editing: true\n      });\n    };\n\n    this.deleteItem = task => {\n      axios.delete(`http://127.0.0.1:8000/api/task-delete/${task.id}/`).then(res => {\n        this.fetchTask();\n        console.log(res);\n      });\n    };\n  }\n\n  // żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n  // inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\n  componentDidMount() {\n    this.fetchTask();\n  }\n\n  render() {\n    let tasks = this.state.todoList;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"task-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      placeholder: \"Add task\",\n      className: \"form-control\",\n      id: \"title\",\n      name: \"bry\",\n      value: this.state.activeItem.title //to nam wyczyści inputa po zatwierdzeniu\n      // gdy activeItem resetuje swe wartości\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit\",\n      type: \"submit\",\n      name: \"add\",\n      className: \"btn btn-warning\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, tasks.map((task, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"task-wrapper flex-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, task.completed == false ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, task.title) : /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, task.title)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.startEdit(task) // musimy podać najpierw () bo inaczej odpali nam to od razu i będzie milion errorów\n      ,\n      className: \"btn btn-sm btn-outline-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.deleteItem(task),\n      className: \"btn btn-sm btn-outline-dark delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, \"-\")))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/piter/Pulpit/tododjreactIvy/frontend/src/App.js"],"names":["React","axios","App","Component","state","todoList","activeItem","id","title","completed","editing","fetchTask","get","then","res","console","log","data","setState","handleChange","e","value","target","handleSubmit","preventDefault","url","post","catch","err","startEdit","task","deleteItem","delete","componentDidMount","render","tasks","flex","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    activeItem: {\n      id: null,\n      title: \"\",\n      completed: false,\n    },\n    editing: false,\n  };\n\n  // Tak ma wyglądać funkcja, żeby nie trzeba było bindować\n  fetchTask = () => {\n    axios.get(\"http://127.0.0.1:8000/api/task-list\").then((res) => {\n      console.log(res.data);\n      this.setState({\n        todoList: res.data,\n      });\n    });\n  };\n\n  // żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n  // inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\n  componentDidMount() {\n    this.fetchTask();\n  }\n\n  handleChange = (e) => {\n    // let name = e.target.name; // da nam wartość name z inputu\n    let value = e.target.value;\n    // console.log(\"Name\", name);\n    // console.log(\"Value\", value);\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Item: \", this.state.activeItem);\n\n    let url = \"http://127.0.0.1:8000/api/task-create/\";\n    // axios.post(url, { headers: { \"Content-Type\": \"application/json\" } });\n\n    if (this.state.editing) {\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n\n    axios\n      .post(url, this.state.activeItem) //postuje słownika activeItem do backendu\n      .then((res) => {\n        console.log(res);\n        this.fetchTask(); //pobiera listę\n        this.setState({\n          // resetuje stan activeItem\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  startEdit = (task) => {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    });\n  };\n\n  deleteItem = (task) => {\n    axios\n      .delete(`http://127.0.0.1:8000/api/task-delete/${task.id}/`)\n      .then((res) => {\n        this.fetchTask();\n        console.log(res);\n      });\n  };\n  render() {\n    let tasks = this.state.todoList;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  {/* The flex-grow property specifies how much \n                the item will grow relative to the rest of the flexible items inside the same container. */}\n                  <input\n                    onChange={this.handleChange}\n                    placeholder=\"Add task\"\n                    className=\"form-control\"\n                    id=\"title\"\n                    name=\"bry\"\n                    value={this.state.activeItem.title} //to nam wyczyści inputa po zatwierdzeniu\n                    // gdy activeItem resetuje swe wartości\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    id=\"submit\"\n                    type=\"submit\"\n                    name=\"add\"\n                    className=\"btn btn-warning\"\n                    value=\"Submit\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {tasks.map((task, index) => (\n              <div key={index} className=\"task-wrapper flex-wrapper\">\n                <div style={{ flex: 7 }}>\n                  {/* tutaj flex 7 a potem oznacza, że ten będzie 7x większy od 1, 14 2 2 zrobi to samo */}\n                  {task.completed == false ? (\n                    <span>{task.title}</span>\n                  ) : (\n                    <strike>{task.title}</strike>\n                  )}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <button\n                    onClick={() => this.startEdit(task)}\n                    // musimy podać najpierw () bo inaczej odpali nam to od razu i będzie milion errorów\n                    className=\"btn btn-sm btn-outline-info\"\n                  >\n                    Edit\n                  </button>\n                  {/* przekazujemy argument task, który mamy w obecnej iteracji */}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <button\n                    onClick={() => this.deleteItem(task)}\n                    className=\"btn btn-sm btn-outline-dark delete\"\n                  >\n                    -\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}