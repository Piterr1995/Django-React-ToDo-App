{"ast":null,"code":"import _objectSpread from\"/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import\"./App.css\";import axios from\"axios\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={todoList:[],activeItem:{id:null,title:\"\",completed:false},editing:false};_this.fetchTask=function(){axios.get(\"http://127.0.0.1:8000/api/task-list\").then(function(res){console.log(res.data);_this.setState({todoList:res.data});});};_this.handleChange=function(e){// let name = e.target.name; // da nam wartość name z inputu\nvar value=e.target.value;// console.log(\"Name\", name);\n// console.log(\"Value\", value);\n_this.setState({activeItem:_objectSpread({},_this.state.activeItem,{title:value})});};_this.handleSubmit=function(e){e.preventDefault();console.log(\"Item: \",_this.state.activeItem);var url=\"http://127.0.0.1:8000/api/task-create/\";// axios.post(url, { headers: { \"Content-Type\": \"application/json\" } });\nif(_this.state.editing){url=\"http://127.0.0.1:8000/api/task-update/\".concat(_this.state.activeItem.id,\"/\");_this.setState({editing:false});}axios.post(url,_this.state.activeItem)//postuje słownika activeItem do backendu\n.then(function(res){console.log(res);_this.fetchTask();//pobiera listę\n_this.setState({// resetuje stan activeItem\nactiveItem:{id:null,title:\"\",completed:false}});}).catch(function(err){console.log(err);});};_this.startEdit=function(task){_this.setState({activeItem:task,editing:true});};_this.deleteItem=function(task){axios.delete(\"http://127.0.0.1:8000/api/task-delete/\".concat(task.id,\"/\")).then(function(res){_this.fetchTask();console.log(res);});};_this.strikeUnstrike=function(task){task.completed=!task.completed;var url=\"http://127.0.0.1:8000/api/task-update/\".concat(task.id,\"/\");axios.post(url,{completed:task.completed,title:task.title}).then(function(){_this.fetchTask();//robimy to w then, bo jak damy pod spodem to pamiętaj\n// że axios działa wolniej, i zrealizuje nam fetch task najpierw\n});console.log(\"Task:\",task.completed);};return _this;}_createClass(App,[{key:\"componentDidMount\",// żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n// inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\nvalue:function componentDidMount(){this.fetchTask();}},{key:\"render\",value:function render(){var _this2=this;var tasks=this.state.todoList;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{id:\"task-container\"},/*#__PURE__*/React.createElement(\"div\",{id:\"form-wrapper\"},/*#__PURE__*/React.createElement(\"form\",{id:\"form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"flex-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{style:{flex:6}},/*#__PURE__*/React.createElement(\"input\",{onChange:this.handleChange,placeholder:\"Add task\",className:\"form-control\",id:\"title\",name:\"bry\",value:this.state.activeItem.title//to nam wyczyści inputa po zatwierdzeniu\n// gdy activeItem resetuje swe wartości\n})),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(\"input\",{id:\"submit\",type:\"submit\",name:\"add\",className:\"btn btn-warning\",value:\"Submit\"}))))),/*#__PURE__*/React.createElement(\"div\",{id:\"list-wrapper\"},tasks.map(function(task,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"task-wrapper flex-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _this2.strikeUnstrike(task);},style:{flex:7}},task.completed==false?/*#__PURE__*/React.createElement(\"span\",null,task.title):/*#__PURE__*/React.createElement(\"strike\",null,task.title)),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.startEdit(task);}// musimy podać najpierw () bo inaczej odpali nam to od razu i będzie milion errorów\n,className:\"btn btn-sm btn-outline-info\"},\"Edit\")),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.deleteItem(task);},className:\"btn btn-sm btn-outline-dark delete\"},\"-\")));}))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/piter/Pulpit/tododjreactIvy/backend/todo_drf/frontend/src/App.js"],"names":["React","axios","App","state","todoList","activeItem","id","title","completed","editing","fetchTask","get","then","res","console","log","data","setState","handleChange","e","value","target","handleSubmit","preventDefault","url","post","catch","err","startEdit","task","deleteItem","delete","strikeUnstrike","tasks","flex","map","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    activeItem: {\n      id: null,\n      title: \"\",\n      completed: false,\n    },\n    editing: false,\n  };\n\n  // Tak ma wyglądać funkcja, żeby nie trzeba było bindować\n  fetchTask = () => {\n    axios.get(\"http://127.0.0.1:8000/api/task-list\").then((res) => {\n      console.log(res.data);\n      this.setState({\n        todoList: res.data,\n      });\n    });\n  };\n\n  // żeby odpalić funkcję fetch task, trzeba dać this.fetchTask().\n  // inaczej nie zadziała, mimo, że nie przyjmuje argumentów to należy użyć ()\n  componentDidMount() {\n    this.fetchTask();\n  }\n\n  handleChange = (e) => {\n    // let name = e.target.name; // da nam wartość name z inputu\n    let value = e.target.value;\n    // console.log(\"Name\", name);\n    // console.log(\"Value\", value);\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Item: \", this.state.activeItem);\n\n    let url = \"http://127.0.0.1:8000/api/task-create/\";\n    // axios.post(url, { headers: { \"Content-Type\": \"application/json\" } });\n\n    if (this.state.editing) {\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n\n    axios\n      .post(url, this.state.activeItem) //postuje słownika activeItem do backendu\n      .then((res) => {\n        console.log(res);\n        this.fetchTask(); //pobiera listę\n        this.setState({\n          // resetuje stan activeItem\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  startEdit = (task) => {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    });\n  };\n\n  deleteItem = (task) => {\n    axios\n      .delete(`http://127.0.0.1:8000/api/task-delete/${task.id}/`)\n      .then((res) => {\n        this.fetchTask();\n        console.log(res);\n      });\n  };\n\n  strikeUnstrike = (task) => {\n    task.completed = !task.completed;\n    let url = `http://127.0.0.1:8000/api/task-update/${task.id}/`;\n\n    axios\n      .post(url, { completed: task.completed, title: task.title })\n      .then(() => {\n        this.fetchTask(); //robimy to w then, bo jak damy pod spodem to pamiętaj\n        // że axios działa wolniej, i zrealizuje nam fetch task najpierw\n      });\n\n    console.log(\"Task:\", task.completed);\n  };\n  render() {\n    let tasks = this.state.todoList;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  {/* The flex-grow property specifies how much \n                the item will grow relative to the rest of the flexible items inside the same container. */}\n                  <input\n                    onChange={this.handleChange}\n                    placeholder=\"Add task\"\n                    className=\"form-control\"\n                    id=\"title\"\n                    name=\"bry\"\n                    value={this.state.activeItem.title} //to nam wyczyści inputa po zatwierdzeniu\n                    // gdy activeItem resetuje swe wartości\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    id=\"submit\"\n                    type=\"submit\"\n                    name=\"add\"\n                    className=\"btn btn-warning\"\n                    value=\"Submit\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {tasks.map((task, index) => (\n              <div key={index} className=\"task-wrapper flex-wrapper\">\n                <div\n                  onClick={() => this.strikeUnstrike(task)}\n                  style={{ flex: 7 }}\n                >\n                  {/* tutaj flex 7 a potem oznacza, że ten będzie 7x większy od 1, 14 2 2 zrobi to samo */}\n                  {task.completed == false ? (\n                    <span>{task.title}</span>\n                  ) : (\n                    <strike>{task.title}</strike>\n                  )}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <button\n                    onClick={() => this.startEdit(task)}\n                    // musimy podać najpierw () bo inaczej odpali nam to od razu i będzie milion errorów\n                    className=\"btn btn-sm btn-outline-info\"\n                  >\n                    Edit\n                  </button>\n                  {/* przekazujemy argument task, który mamy w obecnej iteracji */}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <button\n                    onClick={() => this.deleteItem(task)}\n                    className=\"btn btn-sm btn-outline-dark delete\"\n                  >\n                    -\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}